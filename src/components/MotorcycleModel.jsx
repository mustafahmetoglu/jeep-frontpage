/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 models/MotorcycleModel.glb 
Author: ᗩᒪE᙭. Kᗩ.🚗 (https://sketchfab.com/Alex.Ka.)
License: CC-BY-NC-ND-4.0 (http://creativecommons.org/licenses/by-nc-nd/4.0/)
Source: https://sketchfab.com/3d-models/honda-shadow-rs-2010-2e7cf7bc195044f4a0f60c04581e2691
Title: Honda Shadow RS 2010 🤍🤍🤍
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import { easeQuadOut } from 'd3-ease';

export function Model(props) {
  const { nodes, materials } = useGLTF('./models/MotorcycleModel.glb')
  const [animationComplete, setAnimationComplete] = useState(false);

  const motorRef = useRef()
  document.motorIns = motorRef
  useEffect(() => {
    // motorRef.current.rotation.y = -0.8;
    // motorRef.current.rotation.x = 0.02;
    motorRef.current.scale.x = 1.7
    motorRef.current.scale.y = 1.7
    motorRef.current.scale.z = 1.7
  }, [])
  useFrame(() => {
    
    // document.cameraIns.current.target.x -= 0.1;
    // motorRef.current.rotation.y += 0.0007;
    // document.cameraIns.current.zoomTo(2,true)
    // if (motorRef.current.scale.x < 2 ) {
    //   const scaleIncrement = easeQuadOut(Math.min(2, 1));
    //   motorRef.current.scale.x += scaleIncrement * 0.06
    //   motorRef.current.scale.y += scaleIncrement * 0.06
    //   motorRef.current.scale.z += scaleIncrement * 0.06
    // }
  });

  return (
    <group ref={motorRef} {...props} castShadow dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={1.087}>
        <mesh name='kaporta' geometry={nodes.Object_2.geometry} material={materials.Honda_Shadow_RS_2010_by_Alex_Ka} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.aluminiumdetails} />
        <mesh geometry={nodes.Object_4.geometry} material={materials.black_chrome} />
        <mesh geometry={nodes.Object_5.geometry} material={materials.black_mate} />
        <mesh geometry={nodes.Object_6.geometry} material={materials.black_plastic} />
        <mesh geometry={nodes.Object_7.geometry} material={materials.brakelight} />
        <mesh geometry={nodes.Object_8.geometry} material={materials.chrome} />
        <mesh geometry={nodes.Object_9.geometry} material={materials.chromedetails} />
        <mesh geometry={nodes.Object_10.geometry} material={materials.headlight} />
        {/* <mesh geometry={nodes.Object_11.geometry} material={materials.hondaF} />
        <mesh geometry={nodes.Object_12.geometry} material={materials.hondaR} /> */}
        <mesh geometry={nodes.Object_13.geometry} material={materials.matedetails} />
        <mesh geometry={nodes.Object_14.geometry} material={materials.mirrors} />
        <mesh geometry={nodes.Object_15.geometry} material={materials.plasticdetails} />
        <mesh geometry={nodes.Object_16.geometry} material={materials.sidereflectors} />
        <mesh geometry={nodes.Object_17.geometry} material={materials.spdglass} />
        <mesh geometry={nodes.Object_18.geometry} material={materials.tire} />
      </group>
    </group>
  )
}

useGLTF.preload('./models/MotorcycleModel.glb')
